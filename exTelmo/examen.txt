INFORME EXAMEN ALGORITMOS:
Autor: Telmo Fernández Corujo	77481943A;


Con este codigo se pretende implementar el algorimo ordenar propuesto en
el enunciado del examen y se va a estudiar su complejidad de forma empirica
para los casos del vector original aleatorio, ordenado ascendentemente y
ordenado descendentemente.

Las especificaciones de la máquina que vamos a utilizar son las siguientes:
OS: Linux Mint 20 x86_64
Host: Swift SF315-41 V2.11
Kernel: 5.4.0-53-generic
Uptime: 3 mins
Packages: 2109 (dpkg)
Shell: bash 5.0.17
Resolution: 1920x1080
WM: i3
Theme: Mint-Y-Dark-Brown [GTK2/3]
Icons: Mint-Y-Dark-Brown [GTK2/3]
Terminal: x-terminal-emul
CPU: AMD Ryzen 5 2500U with Radeon Vega Mo
GPU: AMD ATI Radeon Vega Series / Radeon V
Memory: 1153MiB / 6916MiB

Las unidades de tiempo utilizadas son los microsegundos (us).

*********************************************************************************

VECTOR ALEATORIO

La complejidad en este caso sería n^1.11
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.11; 
	h(n)=n^1.21;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.064.
El programa nos muestra por pantalla:

			subestimada	ajustada	sobreestimada
vector aleatorio
n		t(n)			t(n)/n^1.00		t(n)/n^1.11		t(n)/n^1.21
512		*  112.7300		0.22017578		0.11085361		0.05940498	
1024	*  147.0700		0.14362305		0.06700252		0.03350126	
2048	*  316.6500		0.15461426		0.06683489		0.03117958	
4096	   627.0000		0.15307617		0.06131236		0.02668775	
8192	  1390.0000		0.16967773		0.06297265		0.02557484	
16384	  3021.0000		0.18438721		0.06340808		0.02402717	
32768	  6844.0000		0.20886230		0.06655192		0.02352966	
65536	 14432.0000		0.22021484		0.06501803		0.02144795	

La primera fila presenta valores anómalos y la hemos ignorado.


VECTOR ORDENADO ASCENDENTEMENTE

La complejidad en este caso sería n^1.11
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.11; 
	h(n)=n^1.21;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.015.
El programa nos muestra por pantalla:

vector ascendente
n		t(n)			t(n)/n^1.00		t(n)/n^1.11		t(n)/n^1.21
512		*   15.5500		0.03037109		0.01529117		0.00819434	
1024	*   33.8800		0.03308594		0.01543514		0.00771757	
2048	*   74.8700		0.03655762		0.01580271		0.00737223	
4096	*  162.5300		0.03968018		0.01589330		0.00691796	
8192	*  352.3200		0.04300781		0.01596153		0.00648239	
16384	   756.0000		0.04614258		0.01586776		0.00601276	
32768	  1675.0000		0.05111694		0.01628791		0.00575865	
65536	  3482.0000		0.05313110		0.01568686		0.00517473	


VECTOR ORDENADO DESCENDENTEMENTE

La complejidad en este caso sería n^1.11
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.11; 
	h(n)=n^1.21;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.022.
El programa nos muestra por pantalla:

vector descendente
n		t(n)			t(n)/n^1.00		t(n)/n^1.11		t(n)/n^1.21
512		*   20.5600		0.04015625		0.02021778		0.01083444	
1024	*   48.3900		0.04725586		0.02204564		0.01102282	
2048	*  102.9000		0.05024414		0.02171897		0.01013226	
4096	*  219.0900		0.05348877		0.02142412		0.00932539	
8192	*  466.6400		0.05696289		0.02114069		0.00858579	
16384	  1067.0000		0.06512451		0.02239537		0.00848626	
32768	  2373.0000		0.07241821		0.02307535		0.00815837	
65536	  5025.0000		0.07667542		0.02263828		0.00746785


Nota: "*" representa el caso de t<500 us y denota que el tiempo se ha
medido en un bucle de 100 iteraciones.


CONCLUSIÓN****************************************************************************************************

	Experimentalmente hemos llegado a la conclusión de que el algoritmo ordenar
tiene las misma complejidad en los tres casos.
