INFORME P4 ALGORITMOS: Ordenación rápida
Auotores: Telmo Fernández Corujo, Anna Taboada Pardiñas y Andrés Pérez Comesaña.

En esta práctica vamos a implementar la función de Ordenación rápida (Quicksort)
y vamos a comparar los tiempos de ejecución resultantes al ordenar vectores con
distintas situaciones iniciales(vector ordenado ascendentemente, vector ordenado
descendentemente y un vector desordenado), así mismo los vectores deberán tener 
distintos tamaños y ubrales(1, 10 y 100).

Las especificaciones de la máquina que vamos a utilizar son las siguientes:
OS: Ubuntu 18.04.5 LTS x86_64 
Host: GL62M 7RDX REV:1.0 
Kernel: 5.4.0-48-generic 
Uptime: 4 hours, 15 mins 
Packages: 1922 
Shell: bash 4.4.20 
Resolution: 1920x1080 
DE: MATE 
WM: Metacity (Marco) 
WM Theme: Radiant-MATE-Aqua 
Theme: Radiant-MATE-Aqua [GTK2/3] 
Icons: Radiant-MATE-Aqua [GTK2/3] 
Terminal: mate-terminal 
Terminal Font: Ubuntu Mono 13 
CPU: Intel i5-7300HQ (4) @ 3.500GHz 
GPU: Intel Integrated Graphics 
GPU: NVIDIA GeForce GTX 1050 Mobile 
Memory: 2371MiB / 7880MiB

Las unidades de tiempo utilizadas son los microsegundos (us).

*********************************************************************************
ALGORIMO DE ORDENACIÓN RÁPIDA (QUICKSORT): este algoritmo tabaja de la siguiente 
forma: elegimos un elemento al que llamamos pivote, resituamos todos los elementos
del vector entorno al pivote, de manera que los menores que le queden al lado izquerdo
y los mayores a su derecha. A continuación separamos el vector en dos subvectores y le
aplicamos recursivamente el proceso de Ordenación rápida. Se trata de un algoritmo de
complejidad O(nlogn) en el mejor caso, O(n²) en el peor caso y en el caso medio o(nlogn).

MEDICIONES CON UMBRAL=1------------------------------------------------------------------

VECTOR ALEATORIO

La complejidad en este caso sería n^1.08
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.08; 
	h(n)=n^1.18;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.064.
El programa nos muestra por pantalla:

						subestimada		ajustada		sobreestimada
vector aleatorio
n		t(n)			t(n)/n^1.00		t(n)/n^1.08		t(n)/n^1.18
512 	*  184.9200		0.36117187		#0.21926652		0.11750202	
1024	*  173.0800		0.16902344		#0.09707847		0.04853924	
2048	*  240.7900		0.11757324		0.06388547		0.02980363	
4096	   552.0000		0.13476562		0.06527720		0.03015465	
8192	  1012.0000		0.12353516		0.06207854		0.02439947	
16384	  2310.0000		0.14099121		0.06486919		0.02458082	
32768	  4958.0000		0.15130615		0.06585983		0.02328497	
65536	 10323.0000		0.15751648		0.06486458		0.02139733	

VECTOR ORDENADO ASCENDENTEMENTE
La complejidad en este caso sería n^1.08
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.08; 
	h(n)=n^1.18;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.037.
El programa nos muestra por pantalla:

vector ascendente
n		t(n)			t(n)/n^1.00		t(n)/n^1.08		t(n)/n^1.18
512 	*   31.5000		0.06152344		0.03735072		0.02001576	
1024	*   67.6000		0.06601562		0.03791602		0.01895801	
2048	*  146.7800		0.07166992		0.03894310		0.01816760	
4096	*  294.6000		0.07192383		0.03697294		0.01609341	
8192	   686.0000		0.08374023		0.04072518		0.01653956	
16384	  1203.0000		0.07342529		0.03378252		0.01280118	
32768	  2591.0000		0.07907104		0.03441767		0.01216848	
65536	  5684.0000		0.08673096		0.03571542		0.01178169

VECTOR ORDENADO DESCENDENTEMENTE
La complejidad en este caso sería n^1.08
Las cotas subestimada, ajustada y sobreestimada son:
	f(n)=n^1.00;
	g(n)=n^1.08; 
	h(n)=n^1.18;
La progresión geométrica es *2.
La constante a la que tiende la sucesión de la cota ajustada es 0.037.
El programa nos muestra por pantalla:
vector descendente
n		t(n)			t(n)/n^1.00		t(n)/n^1.08		t(n)/n^1.18
512 	*   33.1100		0.06466797		0.03925976		0.02103878	
1024	*   66.4800		0.06492188		0.03728783		0.01864391	
2048	*  144.3200		0.07046875		0.03829042		0.01786311	
4096	*  300.1100		0.07326904		0.03766446		0.01639441	
8192	   617.0000		0.07531738		0.03662891		0.01487596	
16384	  1451.0000		0.08856201		0.04074683		0.01544016	
32768	  2656.0000		0.08105469		0.03528110		0.01247375	
65536	  5746.0000		0.08767700		0.03610500		0.01191021	
